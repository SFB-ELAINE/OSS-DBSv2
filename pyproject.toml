[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "ossdbs"
version = "0.5"
description = "OSS-DBS v2: faster and modular open-source code for deep brain stimulation"
readme = "README.md"
requires-python = ">=3.8"
license = { file = "LICENSE" }
authors = [{ name = "Julius Zimmermann", email = "julius.zimmermann@uni-rostock.de" },
           { name = "Jan Philipp Payonk", email = "jan.payonk@uni-rostock.de" },
           { name = "Tom Reincke", email = "tom.reincke@uni-rostock.de"},
           { name = "Johannes Reding", email = "johannes.reding@uni-rostock.de"},
     	   { name = "Konstantin Butenko", email = "kbutenko@bwh.harvard.edu"},
     	   { name = "Shruthi Chakravarthy", email = "shruthi.chakravarthy@uni-rostock.de"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Operating System :: OS Independent"
]
dependencies = ["h5py==3.8.0", "ngsolve==6.2.2204",
                "nibabel==4.0.2", "pandas==1.5.3",
                "scipy==1.10.1"
                ]

[project.optional-dependencies]
test = ["pytest", "pytest-cov"]

dev = [
    "black",
    "ruff",
    "pre-commit",
]

doc = ["sphinx==6.1.3",
       "sphinx-rtd-theme==1.2.0"]

all = ["ossdbs[test,dev,doc]"]

# TODO enable webgui => currently not supported in CI/CD
# jupyter
# nbsphinx==0.9.2
# ipykernel
# webgui_jupyter_widgets


[project.urls]
homepage = "https://github.com/SFB-ELAINE/oss-dbsv2"
repository = "https://github.com/SFB-ELAINE/oss-dbsv2"

[project.scripts]
ossdbs =  'ossdbs.main:main'
leaddbs2ossdbs = 'leaddbsinterface.convert_input_dictionary:main'

[tool.setuptools]
packages = ["ossdbs"]

[tool.ruff]
line-length = 88
target-version = "py38"
extend-select = [
    "E", # style errors
    "W", # style warnings
    "F", # flakes
    "D", # pydocstyle
    "I", # isort
    "U", # pyupgrade
    "C",    # flake8-comprehensions
    "B",    # flake8-bugbear
    "A001", # flake8-builtins
    "RUF",  # ruff-specific rules
]

extend-ignore = [
    "D100", # Missing docstring in public module
    "D107", # Missing docstring in __init__
    "D203", # 1 blank line required before class docstring
    "D205", # 1 blank line required between summary line and description
    "D212", # Multi-line docstring summary should start at the first line
    "D213", # Multi-line docstring summary should start at the second line
    "D401", # First line should be in imperative mood
    "D413", # Missing blank line after last section
    "D416", # Section name should end with a colon
]

[tool.ruff.per-file-ignores]
"tests/*.py" = ["D", "S", "E501"]
"setup.py" = ["D"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "@overload",
    "except ImportError",
    "\\.\\.\\.",
    "raise NotImplementedError()",
    "except PackageNotFoundError:",
]
[tool.coverage.run]
source = ["ossdbs"]

# Files that should not be in the release
[tool.check-manifest]
ignore = [
    ".gitlab-ci.yml",
    ".pre-commit-config.yaml",
    ".ruff_cache/**/*",
    "setup.py",
    "tests/**/*",
]
